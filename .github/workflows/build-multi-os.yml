# This workflow builds the AYAB release packages
# for Windows, Mac OSX, and Ubuntu/Debian Linux. 
# Script adapted from https://github.com/trappitsch/fbs-release-github-actions

name: build-multi-os
on:
  push:
    tags:
    - 'v*'
    - 'test*'

jobs:
  create-release:
    name: Create release
    runs-on: ubuntu-16.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set GIT_TAG variable
      run: echo "::set-env name=GIT_TAG::$(git describe --tags)"
    - name: Set DRAFT_RELEASE variable
      run: echo "::set-env name=DRAFT_RELEASE::$(echo ${{ env.GIT_TAG }} | sed -e 's/^test.*/true/;s/^v.*/false/')"
    - name: Set PACKAGE_VERSION
      run: |
        echo ${{ env.GIT_TAG }} > src/main/resources/base/ayab/package_version
        sed -i 's/PACKAGE_VERSION/${{env.GIT_TAG}}/' src/build/settings/base.json
        cat src/main/resources/base/ayab/package_version
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: release-${{ env.GIT_TAG }}
        release_name: release-${{ env.GIT_TAG }}
        # body: ""  # release message, alternative to body_path
        # body_path: release_text.md  # uncomment if not used
        draft: $DRAFT_RELEASE
        prerelease: false

  build-ubuntu:
    name: Upload release asset for Ubuntu
    runs-on: ubuntu-16.04
    strategy:
      matrix:
        python-version: [3.6]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set GIT_TAG variable
      run: echo "::set-env name=GIT_TAG::$(git describe --tags)"
    - name: Set PACKAGE_VERSION
      run: |
        echo ${{ env.GIT_TAG }} > src/main/resources/base/ayab/package_version
        sed -i 's/PACKAGE_VERSION/${{env.GIT_TAG}}/' src/build/settings/base.json
        cat src/main/resources/base/ayab/package_version
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt-get install -y avrdude libasound2-dev
        python -m pip install -r requirements.txt
    - name: Convert UI and translation files
      run: |
        sudo apt install -y qt5-default qttools5-dev-tools
        ./setup-environment.sh
        sudo apt remove qt5-default qttools5-dev-tools
    - name: Build app
      run: python -m fbs freeze --debug
    - name: Install fpm
      run: |
        sudo apt-get install -y ruby ruby-dev rubygems build-essential
        sudo gem install --no-document fpm
    - name: Create installer
      run: python -m fbs installer
    - name: Upload package to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/AYAB.deb
        asset_name: AYAB-${{ env.GIT_TAG }}.deb
        tag: release-${{ env.GIT_TAG }}
        overwrite: true

  build-macos:
    name: Upload release asset for Mac OSX
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.6]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set GIT_TAG variable
      run: echo "::set-env name=GIT_TAG::$(git describe --tags)"
    - name: Set PACKAGE_VERSION
      run: |
        echo ${{ env.GIT_TAG }} > src/main/resources/base/ayab/package_version
        sed -i'' -e 's/PACKAGE_VERSION/${{env.GIT_TAG}}/' src/build/settings/base.json
        cat src/main/resources/base/ayab/package_version
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        brew install avrdude
        python -m pip install -r requirements.txt
    - name: Convert UI and translation files
      run: |
        # brew install qt5
        ./setup-environment.sh
    - name: Build app
      run: python -m fbs freeze --debug
    - name: Create installer
      run: python -m fbs installer
    - name: Upload package to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/AYAB.dmg
        asset_name: AYAB-${{ env.GIT_TAG }}.dmg
        tag: release-${{ env.GIT_TAG }}
        overwrite: true

  build-windows:
    name: Upload release asset for Windows
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.6]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set GIT_TAG variable
      run: echo "::set-env name=GIT_TAG::$(git describe --tags)"
    - name: Set PACKAGE_VERSION
      run: |
        echo ${{ env.GIT_TAG }} > src/main/resources/base/ayab/package_version
        sed -i 's/PACKAGE_VERSION/${{env.GIT_TAG}}/' src/build/settings/base.json
        cat src/main/resources/base/ayab/package_version
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install -r requirements.txt
        python -m pip install -r windows-build\windows_build_requirements.txt
    - name: Convert UI and translation files
      run: ./setup-environment.sh
    - name: Build app
      run: python -m fbs freeze --debug
    - name: Create installer
      run: python -m fbs installer
    - name: Upload package to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/AYABSetup.exe
        asset_name: AYAB-${{ env.GIT_TAG }}.exe
        tag: release-${{ env.GIT_TAG }}
        overwrite: true
