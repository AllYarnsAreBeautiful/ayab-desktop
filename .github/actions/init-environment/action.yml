name: Init Environment
outputs:
  do-release:
    value: ${{steps.vars.outputs.do-release}}
  sha-short:
    value: ${{steps.vars.outputs.sha-short}}
  tag:
    value: ${{steps.vars.outputs.tag}}
  draft:
    value: ${{steps.vars.outputs.draft}}
  manifest:
    value: ${{steps.vars.outputs.manifest}}
  python-minor:
    value: ${{steps.vars.outputs.python-minor}}
  python-appimage:
    value: ${{steps.vars.outputs.python-appimage}}
runs:
  using: "composite"
  steps:
    - name: Set up Python ${{ matrix.python-version }}
      id: py
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: "pip"
    - name: Set variables
      id: vars
      shell: bash
      run: |
        if [[ "$GITHUB_REF" =~ ^refs/tags/v?[0-9]+\.[0-9]+\.[0-9]+-?[-a-zA-Z0-9]*$ ]]; then
            echo "do-release=true" >> $GITHUB_OUTPUT
        fi
        echo "sha-short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        echo "tag=$(git describe --tags)" >> $GITHUB_OUTPUT
        echo "draft=$(git describe --tags | sed -e 's/^test.*/true/;s/^v.*/false/')" >> $GITHUB_OUTPUT
        echo "manifest=$(cat src/main/resources/base/ayab/firmware/manifest.txt)" >> $GITHUB_OUTPUT
        echo "python-minor=$(echo '${{steps.py.outputs.python-version}}' | sed -e 's/\.[^.]*$//')" >> $GITHUB_OUTPUT
        echo "python-appimage=python${{steps.py.outputs.python-version}}-cp311-cp311-manylinux_2_28_x86_64.AppImage" >> $GITHUB_OUTPUT
    - name: Set PACKAGE_VERSION
      shell: bash
      run: |
        echo ${{ steps.vars.outputs.tag }} > src/main/resources/base/ayab/package_version
        # remove suffix from semver tag, as fbs does not support them
        version_without_suffix=$(echo ${{ steps.vars.outputs.tag }} | sed -E 's/^v?([0-9]+\.[0-9]+\.[0-9]+).*$/\1/')
        sed -i -e "s/PACKAGE_VERSION/$version_without_suffix/" src/build/settings/base.json
